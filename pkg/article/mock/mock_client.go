// Code generated by MockGen. DO NOT EDIT.
// Source: client.go

// Package mock_article is a generated GoMock package.
package mock_article

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	devto "github.com/shihanng/devto/pkg/devto"
	http "net/http"
	reflect "reflect"
)

// MockapiClient is a mock of apiClient interface
type MockapiClient struct {
	ctrl     *gomock.Controller
	recorder *MockapiClientMockRecorder
}

// MockapiClientMockRecorder is the mock recorder for MockapiClient
type MockapiClientMockRecorder struct {
	mock *MockapiClient
}

// NewMockapiClient creates a new mock instance
func NewMockapiClient(ctrl *gomock.Controller) *MockapiClient {
	mock := &MockapiClient{ctrl: ctrl}
	mock.recorder = &MockapiClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockapiClient) EXPECT() *MockapiClientMockRecorder {
	return m.recorder
}

// CreateArticle mocks base method
func (m *MockapiClient) CreateArticle(arg0 context.Context, arg1 *devto.ArticlesApiCreateArticleOpts) (devto.ArticleShow, *http.Response, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateArticle", arg0, arg1)
	ret0, _ := ret[0].(devto.ArticleShow)
	ret1, _ := ret[1].(*http.Response)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// CreateArticle indicates an expected call of CreateArticle
func (mr *MockapiClientMockRecorder) CreateArticle(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateArticle", reflect.TypeOf((*MockapiClient)(nil).CreateArticle), arg0, arg1)
}

// UpdateArticle mocks base method
func (m *MockapiClient) UpdateArticle(arg0 context.Context, arg1 int32, arg2 *devto.ArticlesApiUpdateArticleOpts) (devto.ArticleShow, *http.Response, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateArticle", arg0, arg1, arg2)
	ret0, _ := ret[0].(devto.ArticleShow)
	ret1, _ := ret[1].(*http.Response)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// UpdateArticle indicates an expected call of UpdateArticle
func (mr *MockapiClientMockRecorder) UpdateArticle(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateArticle", reflect.TypeOf((*MockapiClient)(nil).UpdateArticle), arg0, arg1, arg2)
}

// GetUserAllArticles mocks base method
func (m *MockapiClient) GetUserAllArticles(arg0 context.Context, arg1 *devto.ArticlesApiGetUserAllArticlesOpts) ([]devto.ArticleMe, *http.Response, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUserAllArticles", arg0, arg1)
	ret0, _ := ret[0].([]devto.ArticleMe)
	ret1, _ := ret[1].(*http.Response)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetUserAllArticles indicates an expected call of GetUserAllArticles
func (mr *MockapiClientMockRecorder) GetUserAllArticles(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUserAllArticles", reflect.TypeOf((*MockapiClient)(nil).GetUserAllArticles), arg0, arg1)
}
